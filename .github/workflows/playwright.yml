name: Playwright Cucumber Tests
on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:
    inputs:
      browser:
        description: 'Browser to run tests on'
        required: true
        default: 'chromium'
        type: choice
        options:
          - chromium
          - firefox
          - webkit
      tags:
        description: 'Test tags to run (e.g. @smoke, @form)'
        required: false
        default: ''
        type: string

jobs:
  test:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 18
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci --legacy-peer-deps
    
    - name: Install Playwright Browsers
      run: npx playwright install --with-deps
    
    - name: Install Allure commandline
      run: npm install -g allure-commandline
    
    - name: Run ESLint
      run: npm run lint
    
    - name: Clean and create allure-results directory
      run: |
        rm -rf allure-results || true
        mkdir -p allure-results
    
    - name: Run Smoke Tests
      if: github.event_name != 'workflow_dispatch' || github.event.inputs.tags == ''
      run: |
        # Run tests explicitly without the TypeScript formatter to avoid runtime issues
        node_modules/.bin/cucumber-js --require-module ts-node/register --require features/support/**/*.ts --require features/step_definitions/**/*.ts --format @cucumber/pretty-formatter --format ./features/support/allure.setup.js --tags @smoke
      continue-on-error: true
      
    - name: Run Tests with Tags
      if: github.event_name == 'workflow_dispatch' && github.event.inputs.tags != ''
      run: |
        # Run tests explicitly without the TypeScript formatter to avoid runtime issues
        node_modules/.bin/cucumber-js --require-module ts-node/register --require features/support/**/*.ts --require features/step_definitions/**/*.ts --format @cucumber/pretty-formatter --format ./features/support/allure.setup.js --tags "${{ github.event.inputs.tags }}"
      continue-on-error: true
    
    - name: Run Form Tests
      if: github.event_name != 'workflow_dispatch' || github.event.inputs.tags == ''
      run: |
        # Run tests explicitly without the TypeScript formatter to avoid runtime issues
        node_modules/.bin/cucumber-js --require-module ts-node/register --require features/support/**/*.ts --require features/step_definitions/**/*.ts --format @cucumber/pretty-formatter --format ./features/support/allure.setup.js --tags @form
      continue-on-error: true
    
    - name: Debug - List allure-results contents before generation
      run: ls -la allure-results
      continue-on-error: true
    
    - name: Generate Allure Report
      if: always()
      run: allure generate allure-results --clean -o allure-report
      continue-on-error: true
    
    - name: Debug - List allure-report contents
      run: ls -la allure-report
      continue-on-error: true
    
    - name: Upload Allure Report
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: allure-report
        path: allure-report/
        retention-days: 30
    
    - name: Upload Allure Results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: allure-results
        path: allure-results/
        retention-days: 30
    
    - name: Upload Test Screenshots
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-screenshots
        path: allure-results/*.png
        retention-days: 7

  publish-report:
    needs: test
    if: always()
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    permissions:
      contents: read
      pages: write
      id-token: write
    
    steps:
    - name: Download Allure Report
      uses: actions/download-artifact@v4
      with:
        name: allure-report
        path: allure-report
    
    - name: List Allure Report Files
      run: ls -la allure-report
    
    - name: Setup Pages
      uses: actions/configure-pages@v5
      
    - name: Upload artifact
      uses: actions/upload-pages-artifact@v3
      with:
        path: 'allure-report'
        
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4
